"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[503],{6691:e=>{e.exports=JSON.parse('{"functions":[{"name":"Move","desc":"Moves a PVInstance (Model, Folder, or BasePart) to a new position using tweens.\\n\\n\\n\\n**Example:**\\n```lua\\nlocal Part = workspace.MyPart\\nlocal Model = workspace.MyModel\\n\\n-- Move a part upward by 10 studs over 1 second\\nTweenModule.Move(Part, \\"QuadOut:1\\", Vector3.new(0, 10, 0), false)\\n\\n-- Move a model forward relative to its pivot\\nTweenModule.Move(Model, \\"SineInOut:2\\", CFrame.new(0, 0, -20), true)\\n```","params":[{"name":"target","desc":"The instance to move.","lua_type":"PVInstance"},{"name":"tweenInfo","desc":"The tween settings or profile string (e.g. `\\"SineOut:1.5\\"`).","lua_type":"TweenInfo | string"},{"name":"movement","desc":"","lua_type":"CFrame | Vector3"},{"name":"byPivot","desc":"If true, applies movement relative to pivot.","lua_type":"boolean"}],"returns":[{"desc":"Returns the handler for the tween.","lua_type":"TweenHandle"}],"function_type":"static","source":{"line":392,"path":"src/init.lua"}},{"name":"CustomTween","desc":"Tweens a given instance with specified properties and optional completion callback.\\n\\n\\n\\n**Example:**\\n```lua\\nlocal Handle = TweenModule.CustomTween(workspace.Part, \\"QuadInOut:2\\", {\\n\\tTransparency = 1,\\n\\tColor = Color3.new(1, 0, 0),\\n}, function()\\n\\tprint(\\"Tween finished!\\")\\nend)\\n\\nHandle.Pause() -- Pauses the tween\\ntask.wait(1)\\nHandle.Resume() -- Resumes the tween\\n```","params":[{"name":"target","desc":"The instance to tween.","lua_type":"Instance"},{"name":"tweenInfo","desc":"The tween settings, or a profile string like `\\"SineOut:1.5\\"`.","lua_type":"TweenInfo | string"},{"name":"properties","desc":"The properties to tween.","lua_type":"{ [string]: any }"},{"name":"callback?","desc":"Optional function to call when the tween completes.","lua_type":"(() -> nil)"}],"returns":[{"desc":"A table containing control methods like `Play`, `Pause`, and `Cancel`.","lua_type":"TweenHandle"}],"function_type":"static","source":{"line":478,"path":"src/init.lua"}},{"name":"ChainTween","desc":"Chains multiple tweens to play one after another in sequence.\\n\\n\\n**Example:**\\n```lua\\nTweenModule.ChainTween({\\n\\t{\\n\\t\\tinstance = workspace.Part1,\\n\\t\\ttweenInfo = \\"SineOut:1\\",\\n\\t\\tprops = { Position = Vector3.new(0, 10, 0) },\\n\\t},\\n\\t{\\n\\t\\tinstance = workspace.Part2,\\n\\t\\ttweenInfo = \\"SineIn:1\\",\\n\\t\\tprops = { Position = Vector3.new(0, 0, 0) },\\n\\t},\\n}, function()\\n\\tprint(\\"Chain finished!\\")\\nend)\\n```","params":[{"name":"tweens","desc":"A list of tween configs to apply in sequence.","lua_type":"{ { instance: Instance, tweenInfo: TweenInfo | string, props: { [string]: any } } }"},{"name":"onComplete","desc":"Optional callback function called after all tweens complete.","lua_type":"(() -> nil)?"}],"returns":[],"function_type":"static","source":{"line":563,"path":"src/init.lua"}},{"name":"Transparency","desc":"Tweens the transparency of all BaseParts in a target.\\n\\n\\n**Example:**\\n```lua\\nTweenModule.Transparency(workspace.Model, \\"QuadInOut:0.5\\", 1)\\n```","params":[{"name":"target","desc":"The instance (Model, BasePart, or Folder) whose BaseParts\' transparency will be affected.","lua_type":"PVInstance"},{"name":"tweenInfo","desc":"The TweenInfo.new() settings or a string profile (e.g. \\"SineOut:1.5\\").","lua_type":"TweenInfo | string"},{"name":"Transparency","desc":"The target transparency value between 0 and 1.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":605,"path":"src/init.lua"}},{"name":"TweenTag","desc":"Tweens all instances with a specific CollectionService tag using the provided tween settings and property goals.\\n\\n\\n**Example:**\\n```lua\\nTweenModule.TweenTag(\\"HighlightParts\\", \\"BackInOut:1.2\\", { Transparency = 0.25 }, function()\\n\\tprint(\\"All tagged parts have finished tweening.\\")\\nend)\\n```","params":[{"name":"tag","desc":"The tag to search for using CollectionService.","lua_type":"string"},{"name":"tweenInfo","desc":"The tween settings or a profile string (e.g. \\"SineOut:1.5\\").","lua_type":"TweenInfo | string"},{"name":"properties","desc":"A table of property goals to tween.","lua_type":"{ [string]: any }"},{"name":"callback?","desc":"Optional function called after all tagged tweens complete.","lua_type":"(() -> nil)"}],"returns":[],"function_type":"static","source":{"line":629,"path":"src/init.lua"}},{"name":"Shake","desc":"Applies a shaking effect to a PVInstance for a set duration and intensity.\\n\\n\\n\\n**Example:**\\n```lua\\nlocal StopShake = TweenModule.Shake(workspace.Model, 2, 6, true) -- Will shake the model for 2 seconds with intensity 6 and each part individually.\\n\\n-- Stop early after 1 second\\ntask.delay(1, function()\\n\\tStopShake()\\nend)\\n```","params":[{"name":"target","desc":"The instance or model to apply the shake effect to.","lua_type":"PVInstance"},{"name":"duration","desc":"The total time in seconds the shake lasts (`-1` for infinite shake).","lua_type":"number"},{"name":"intensity","desc":"How strong the shake is (higher = more jitter).","lua_type":"number"},{"name":"individually","desc":"If true, shakes each BasePart individually; otherwise, shakes the entire model via pivot.","lua_type":"boolean"}],"returns":[{"desc":"A function that can be called to manually stop the shake.","lua_type":"() -> ()"}],"function_type":"static","source":{"line":678,"path":"src/init.lua"}},{"name":"Scale","desc":"Scales a PVInstance\'s BaseParts by a Vector3 value, optionally adjusting position.\\n\\n\\n**Example:**\\n```lua\\n-- Scale up each part in a folder by (2, 2, 2) and shift positions\\nTweenModule.Scale(workspace.BuildingParts, \\"InOutQuad:1.25\\", Vector3.new(2, 2, 2), true, false)\\n\\n-- Uniformly scale a model from its pivot point\\nTweenModule.Scale(workspace.CarModel, \\"SineOut:1.5\\", Vector3.new(1.2, 1.2, 1.2), false, true)\\n```","params":[{"name":"target","desc":"The instance to scale (Model, Folder, or BasePart).","lua_type":"PVInstance"},{"name":"tweenInfo","desc":"The tween settings or a string profile (e.g., \\"SineOut:1.5\\").","lua_type":"TweenInfo | string"},{"name":"scaleTo","desc":"The amount to scale by (additive for per-part, multiplicative for models).","lua_type":"Vector3"},{"name":"adjustPosition","desc":"If true, adjusts each part\u2019s position to compensate for scaling.","lua_type":"boolean"},{"name":"scaledByModel","desc":"If true, scales the whole model using pivot math. Requires `target:IsA(\\"Model\\")`.","lua_type":"boolean"}],"returns":[],"function_type":"static","source":{"line":752,"path":"src/init.lua"}},{"name":"Color","desc":"Animates the color of all BaseParts within a PVInstance to a target color.\\n\\n\\n**Example:**\\n```lua\\n-- Tween to bright red using a string profile\\nTweenModule.Color(workspace.Model, \\"QuadOut:1\\", \\"#ff0040\\")\\n\\n-- Tween to BrickColor\\nTweenModule.Color(workspace.Model, \\"QuadOut:1\\", BrickColor.new(\\"Bright red\\"))\\n\\n-- Tween to Color3 directly\\nTweenModule.Color(workspace.Model, \\"QuadOut:1\\", Color3.fromRGB(0, 255, 150))\\n```","params":[{"name":"target","desc":"The instance to color (Model, Folder, or BasePart).","lua_type":"PVInstance"},{"name":"tweenInfo","desc":"The tween configuration or a string profile (e.g. `\\"OutBounce:1\\"`).","lua_type":"TweenInfo | string"},{"name":"ColorTo","desc":"The target color (can be Color3, BrickColor, or hex string like `\\"#ff0040\\"`).","lua_type":"Color3 | BrickColor | string"}],"returns":[],"function_type":"static","source":{"line":807,"path":"src/init.lua"}},{"name":"Rotate","desc":"Rotates a PVInstance (Model, Folder, or BasePart) using tweens.\\n\\n\\n**Example:**\\n```lua\\nTweenModule.Rotate(workspace.MyModelIWantRotatedNOW, \\"SineOut:1\\", Vector3.new(0, 90, 0), true)\\n```","params":[{"name":"target","desc":"The instance to rotate.","lua_type":"PVInstance"},{"name":"tweenInfo","desc":"The tween settings or a profile string (e.g. `\\"SineInOut:1\\"`).","lua_type":"TweenInfo | string"},{"name":"rotation","desc":"The rotation in degrees (X, Y, Z).","lua_type":"Vector3"},{"name":"byPivot","desc":"If true, rotates around the current pivot point.","lua_type":"boolean"}],"returns":[],"function_type":"static","source":{"line":855,"path":"src/init.lua"}},{"name":"SequenceTween","desc":"Animates properties of Beams or their descendants using NumberSequence or ColorSequence with easing.\\n\\n\\n:::caution Use this function with caution!\\nThis function has only been tested with Beams and their properties. Other instances may not work as expected but will be continously worked on if any issues arise.\\n:::\\n\\n**Example:**\\n```lua\\n-- Animate all beams in a model to fade transparency over 2 seconds\\nTweenModule.SequenceTween(workspace.MyBeamGroup, \\"SineOut:2\\", {\\n\\tTransparency = NumberSequence.new(1)\\n}, true)\\n\\n-- Animate a single beam\'s color\\nTweenModule.SequenceTween(myBeam, \\"QuadIn:1.5\\", {\\n\\tColor = ColorSequence.new(Color3.new(1, 0, 0))\\n}, false)\\n```","params":[{"name":"target","desc":"A Beam, Model, Folder, or other container.","lua_type":"Instance"},{"name":"tweenInfo","desc":"The easing configuration or a string profile (e.g. `\\"QuadInOut:1.5\\"`).","lua_type":"TweenInfo | string"},{"name":"properties","desc":"Table of properties to tween. Supports `Color`, `Transparency`, `CurveSize0`, `CurveSize1`.","lua_type":"{ [string]: any }"},{"name":"universal","desc":"If true, recursively applies to all Beams inside the target.","lua_type":"boolean"}],"returns":[],"function_type":"static","source":{"line":932,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"TweenModule","desc":"A module for creating and managing tweens in Roblox.\\nProvides group tweening, custom profiles, tag-based tweens, and more.","tags":["TweenModule"],"source":{"line":14,"path":"src/init.lua"}}')}}]);