{"searchDocs":[{"title":"Intro","type":0,"sectionRef":"#","url":"/Jaylen-TweenModule/docs/intro","content":"Intro Welcome to Jaylen's TweenModule Documentation! Here, you'll learn on how to use some of the functions from this beautifully built TweenModule! NOTICE! This TweenModule is for anyone, including Beginners. If need of any help, check out the Tutorial here! üòè","keywords":"","version":"Next"},{"title":"GroupHandler","type":0,"sectionRef":"#","url":"/Jaylen-TweenModule/api/GroupHandler","content":"","keywords":"","version":null},{"title":"Functions‚Äã","type":1,"pageTitle":"GroupHandler","url":"/Jaylen-TweenModule/api/GroupHandler#functions","content":" ","version":null,"tagName":"h2"},{"title":"Add‚Äã","type":1,"pageTitle":"GroupHandler","url":"/Jaylen-TweenModule/api/GroupHandler#Add","content":"&lt;/&gt; GroupHandler:Add( ...:¬†Instance -- Instances to add. ) ‚Üí¬†() Adds instances to the group.  ","version":null,"tagName":"h3"},{"title":"Remove‚Äã","type":1,"pageTitle":"GroupHandler","url":"/Jaylen-TweenModule/api/GroupHandler#Remove","content":"&lt;/&gt; GroupHandler:Remove( ...:¬†Instance -- Instances to remove. ) ‚Üí¬†() Removes instances from the group. ","version":null,"tagName":"h3"},{"title":"How do I use this?","type":0,"sectionRef":"#","url":"/Jaylen-TweenModule/docs/Usage/HowTo","content":"","keywords":"","version":"Next"},{"title":"Getting Started‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#getting-started","content":" Before doing anything with your code, you need to identify TweenModule.  local TweenModule = require(Path.To.TweenModule)   Are you using this TweenModule for TRIA.os and receiving an error about a Script not implementing Runtime? If you're using this specifically for TRIA.os, go to the TweenModule and put this on line 1  require(game:GetService(&quot;ServerScriptService&quot;).Runtime):Init()   If it still doesn't work, please check for any of your scripts that doesn't have Runtime on line 1.  ","version":"Next","tagName":"h2"},{"title":"Basic Tween‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#basic-tween","content":" You can tween any BasePart or Model like so:  TweenModule.Move(workspace.MyPart, &quot;SineOut:1&quot;, Vector3.new(0, 10, 0), false)   This moves MyPart 10 studs up over 1 second using Sine easing outward.  ","version":"Next","tagName":"h2"},{"title":"TweenInfo: String or Instance‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#tweeninfo-string-or-instance","content":" info All functions in TweenModule accept either a TweenInfo object or a TweenInfo string.  ","version":"Next","tagName":"h2"},{"title":"Option 1: TweenInfo.new‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#option-1-tweeninfonew","content":" You can use the default TweenInfo like this:  TweenModule.Move(workspace.Part, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), Vector3.new(0, 5, 0), true)   ","version":"Next","tagName":"h3"},{"title":"Option 2: TweenInfo String Profile Format‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#option-2-tweeninfo-string-profile-format","content":" You can also pass a string with this format:  &lt;EasingStyle&gt;&lt;EasingDirection&gt;:[Duration]:[RepeatCount]:[Reverses]:[DelayTime]   Please note Only the EasingStyle+EasingDirection are required.  Example‚Äã  TweenModule.Color(workspace.Model, &quot;QuadInOut:1.5:0:true:0&quot;, Color3.fromRGB(255, 100, 100))   This uses Quad easing in &amp; out for 1.5 seconds, does not repeat, reverses once, and has no delay.  ","version":"Next","tagName":"h3"},{"title":"Group Tweens‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#group-tweens","content":" Group multiple models or parts into one controller:  local Groups = TweenModule.Groups local MyFavoriteUnbiasedGroup = Groups.new(workspace.Model1, workspace.Model2) MyFavoriteUnbiasedGroup:Move(&quot;SineInOut:2&quot;, CFrame.new(0, 5, 0), true) MyFavoriteUnbiasedGroup:Color(&quot;OutBounce:1&quot;, Color3.fromRGB(0, 255, 0)) MyFavoriteUnbiasedGroup:Add(workspace.Model3) MyFavoriteUnbiasedGroup:Remove(workspace.Model1)   ","version":"Next","tagName":"h2"},{"title":"Tween by Tag‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#tween-by-tag","content":" Tween anything tagged with CollectionService:  TweenModule.TweenTag(&quot;Tweenable&quot;, &quot;ElasticOut:2&quot;, { Transparency = 0.5 })   ","version":"Next","tagName":"h2"},{"title":"Chain Tweens‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#chain-tweens","content":" Play multiple tweens one after the other:  TweenModule.ChainTween({ { instance = workspace.Part1, tweenInfo = &quot;SineOut:1&quot;, props = { Transparency = 0.2 } }, { instance = workspace.Part1, tweenInfo = &quot;SineIn:1&quot;, props = { Transparency = 1 } }, }, function() print(&quot;Finished chain!&quot;) end)   ","version":"Next","tagName":"h2"},{"title":"Color Support‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#color-support","content":" Supports:  Color3BrickColorHex strings like &quot;#ff0000&quot;  TweenModule.Color(workspace.Part, &quot;QuadOut:1&quot;, BrickColor.new(&quot;Bright blue&quot;)) TweenModule.Color(workspace.Part, &quot;OutElastic:1&quot;, &quot;#FFB6C1&quot;)   ","version":"Next","tagName":"h2"},{"title":"Beam / Curve Tweening‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#beam--curve-tweening","content":" TweenModule.SequenceTween(workspace.MyBeam, &quot;SineInOut:2&quot;, { Color = ColorSequence.new(Color3.new(1, 0, 0), Color3.new(0, 0, 1)), CurveSize0 = 2, }, true)   ","version":"Next","tagName":"h2"},{"title":"Shake‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#shake","content":" TweenModule.Shake(workspace.Part, 2, 5, false)   Shakes a part for 2 seconds at intensity 5. Use -1 for infinite shake (stop manually).  ","version":"Next","tagName":"h2"},{"title":"Scale‚Äã","type":1,"pageTitle":"How do I use this?","url":"/Jaylen-TweenModule/docs/Usage/HowTo#scale","content":" TweenModule.Scale(workspace.Model, &quot;SineOut:1&quot;, Vector3.new(2, 2, 2), true, false)   adjustPosition = true: Moves part as it scales.scaledByModel = true: Preserves relative offsets inside the model. ","version":"Next","tagName":"h2"},{"title":"TweenModule","type":0,"sectionRef":"#","url":"/Jaylen-TweenModule/api/TweenModule","content":"","keywords":"","version":null},{"title":"Functions‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#functions","content":" ","version":null,"tagName":"h2"},{"title":"Move‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Move","content":"&lt;/&gt; TweenModule.Move( target:¬†PVInstance ,-- The instance to move. tweenInfo:¬†TweenInfo |¬†string,-- The tween settings or profile string (e.g. &quot;SineOut:1.5&quot;). movement:¬†CFrame |¬†Vector3 , byPivot:¬†boolean-- If true, applies movement relative to pivot. ) ‚Üí¬†TweenHandle-- Returns the handler for the tween. Moves a PVInstance (Model, Folder, or BasePart) to a new position using tweens. Example: local Part = workspace.MyPart local Model = workspace.MyModel -- Move a part upward by 10 studs over 1 second TweenModule.Move(Part, &quot;QuadOut:1&quot;, Vector3.new(0, 10, 0), false) -- Move a model forward relative to its pivot TweenModule.Move(Model, &quot;SineInOut:2&quot;, CFrame.new(0, 0, -20), true)   ","version":null,"tagName":"h3"},{"title":"CustomTween‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#CustomTween","content":"&lt;/&gt; TweenModule.CustomTween( target:¬†Instance ,-- The instance to tween. tweenInfo:¬†TweenInfo |¬†string,-- The tween settings, or a profile string like &quot;SineOut:1.5&quot;. properties:¬†{[string]:¬†any},-- The properties to tween. callback?:¬†(()¬†‚Üí¬†nil)-- Optional function to call when the tween completes. ) ‚Üí¬†TweenHandle-- A table containing control methods like Play, Pause, and Cancel. Tweens a given instance with specified properties and optional completion callback. Example: local Handle = TweenModule.CustomTween(workspace.Part, &quot;QuadInOut:2&quot;, { Transparency = 1, Color = Color3.new(1, 0, 0), }, function() print(&quot;Tween finished!&quot;) end) Handle.Pause() -- Pauses the tween task.wait(1) Handle.Resume() -- Resumes the tween   ","version":null,"tagName":"h3"},{"title":"ChainTween‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#ChainTween","content":"&lt;/&gt; TweenModule.ChainTween( tweens:¬†{{ instance:¬†Instance , tweenInfo:¬†TweenInfo |¬†string, props:¬†{[string]:¬†any} }},-- A list of tween configs to apply in sequence. onComplete:¬†(()¬†‚Üí¬†nil)?-- Optional callback function called after all tweens complete. ) ‚Üí¬†() Chains multiple tweens to play one after another in sequence. Example: TweenModule.ChainTween({ { instance = workspace.Part1, tweenInfo = &quot;SineOut:1&quot;, props = { Position = Vector3.new(0, 10, 0) }, }, { instance = workspace.Part2, tweenInfo = &quot;SineIn:1&quot;, props = { Position = Vector3.new(0, 0, 0) }, }, }, function() print(&quot;Chain finished!&quot;) end)   ","version":null,"tagName":"h3"},{"title":"Transparency‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Transparency","content":"&lt;/&gt; TweenModule.Transparency( target:¬†PVInstance ,-- The instance (Model, BasePart, or Folder) whose BaseParts' transparency will be affected. tweenInfo:¬†TweenInfo |¬†string,-- The TweenInfo.new() settings or a string profile (e.g. &quot;SineOut:1.5&quot;). Transparency:¬†number-- The target transparency value between 0 and 1. ) ‚Üí¬†() Tweens the transparency of all BaseParts in a target. Example: TweenModule.Transparency(workspace.Model, &quot;QuadInOut:0.5&quot;, 1)   ","version":null,"tagName":"h3"},{"title":"TweenTag‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#TweenTag","content":"&lt;/&gt; TweenModule.TweenTag( tag:¬†string,-- The tag to search for using CollectionService. tweenInfo:¬†TweenInfo |¬†string,-- The tween settings or a profile string (e.g. &quot;SineOut:1.5&quot;). properties:¬†{[string]:¬†any},-- A table of property goals to tween. callback?:¬†(()¬†‚Üí¬†nil)-- Optional function called after all tagged tweens complete. ) ‚Üí¬†() Tweens all instances with a specific CollectionService tag using the provided tween settings and property goals. Example: TweenModule.TweenTag(&quot;HighlightParts&quot;, &quot;BackInOut:1.2&quot;, { Transparency = 0.25 }, function() print(&quot;All tagged parts have finished tweening.&quot;) end)   ","version":null,"tagName":"h3"},{"title":"Shake‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Shake","content":"&lt;/&gt; TweenModule.Shake( target:¬†PVInstance ,-- The instance or model to apply the shake effect to. duration:¬†number,-- The total time in seconds the shake lasts (-1 for infinite shake). intensity:¬†number,-- How strong the shake is (higher = more jitter). individually:¬†boolean-- If true, shakes each BasePart individually; otherwise, shakes the entire model via pivot. ) ‚Üí¬†()¬†‚Üí¬†()-- A function that can be called to manually stop the shake. Applies a shaking effect to a PVInstance for a set duration and intensity. Example: local StopShake = TweenModule.Shake(workspace.Model, 2, 6, true) -- Will shake the model for 2 seconds with intensity 6 and each part individually. -- Stop early after 1 second task.delay(1, function() StopShake() end)   ","version":null,"tagName":"h3"},{"title":"Scale‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Scale","content":"&lt;/&gt; TweenModule.Scale( target:¬†PVInstance ,-- The instance to scale (Model, Folder, or BasePart). tweenInfo:¬†TweenInfo |¬†string,-- The tween settings or a string profile (e.g., &quot;SineOut:1.5&quot;). scaleTo:¬†Vector3 ,-- The amount to scale by (additive for per-part, multiplicative for models). adjustPosition:¬†boolean,-- If true, adjusts each part‚Äôs position to compensate for scaling. scaledByModel:¬†boolean-- If true, scales the whole model using pivot math. Requires target:IsA(&quot;Model&quot;). ) ‚Üí¬†() Scales a PVInstance's BaseParts by a Vector3 value, optionally adjusting position. Example: -- Scale up each part in a folder by (2, 2, 2) and shift positions TweenModule.Scale(workspace.BuildingParts, &quot;InOutQuad:1.25&quot;, Vector3.new(2, 2, 2), true, false) -- Uniformly scale a model from its pivot point TweenModule.Scale(workspace.CarModel, &quot;SineOut:1.5&quot;, Vector3.new(1.2, 1.2, 1.2), false, true)   ","version":null,"tagName":"h3"},{"title":"Color‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Color","content":"&lt;/&gt; TweenModule.Color( target:¬†PVInstance ,-- The instance to color (Model, Folder, or BasePart). tweenInfo:¬†TweenInfo |¬†string,-- The tween configuration or a string profile (e.g. &quot;OutBounce:1&quot;). ColorTo:¬†Color3 |¬†BrickColor |¬†string-- The target color (can be Color3, BrickColor, or hex string like &quot;#ff0040&quot;). ) ‚Üí¬†() Animates the color of all BaseParts within a PVInstance to a target color. Example: -- Tween to bright red using a string profile TweenModule.Color(workspace.Model, &quot;QuadOut:1&quot;, &quot;#ff0040&quot;) -- Tween to BrickColor TweenModule.Color(workspace.Model, &quot;QuadOut:1&quot;, BrickColor.new(&quot;Bright red&quot;)) -- Tween to Color3 directly TweenModule.Color(workspace.Model, &quot;QuadOut:1&quot;, Color3.fromRGB(0, 255, 150))   ","version":null,"tagName":"h3"},{"title":"Rotate‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#Rotate","content":"&lt;/&gt; TweenModule.Rotate( target:¬†PVInstance ,-- The instance to rotate. tweenInfo:¬†TweenInfo |¬†string,-- The tween settings or a profile string (e.g. &quot;SineInOut:1&quot;). rotation:¬†Vector3 ,-- The rotation in degrees (X, Y, Z). byPivot:¬†boolean-- If true, rotates around the current pivot point. ) ‚Üí¬†() Rotates a PVInstance (Model, Folder, or BasePart) using tweens. Example: TweenModule.Rotate(workspace.MyModelIWantRotatedNOW, &quot;SineOut:1&quot;, Vector3.new(0, 90, 0), true)   ","version":null,"tagName":"h3"},{"title":"SequenceTween‚Äã","type":1,"pageTitle":"TweenModule","url":"/Jaylen-TweenModule/api/TweenModule#SequenceTween","content":"&lt;/&gt; TweenModule.SequenceTween( target:¬†Instance ,-- A Beam, Model, Folder, or other container. tweenInfo:¬†TweenInfo |¬†string,-- The easing configuration or a string profile (e.g. &quot;QuadInOut:1.5&quot;). properties:¬†{[string]:¬†any},-- Table of properties to tween. Supports Color, Transparency, CurveSize0, CurveSize1. universal:¬†boolean-- If true, recursively applies to all Beams inside the target. ) ‚Üí¬†() Animates properties of Beams or their descendants using NumberSequence or ColorSequence with easing. Use this function with caution! This function has only been tested with Beams and their properties. Other instances may not work as expected but will be continously worked on if any issues arise. Example: -- Animate all beams in a model to fade transparency over 2 seconds TweenModule.SequenceTween(workspace.MyBeamGroup, &quot;SineOut:2&quot;, { Transparency = NumberSequence.new(1) }, true) -- Animate a single beam's color TweenModule.SequenceTween(myBeam, &quot;QuadIn:1.5&quot;, { Color = ColorSequence.new(Color3.new(1, 0, 0)) }, false)  ","version":null,"tagName":"h3"}],"options":{"id":"default"}}